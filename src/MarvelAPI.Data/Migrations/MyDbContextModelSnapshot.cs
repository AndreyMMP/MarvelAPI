// <auto-generated />
using MarvelAPI.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarvelAPI.Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MarvelAPI.Business.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributionHTML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Copyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.CharacterInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarvelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Comics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Available")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId")
                        .IsUnique();

                    b.ToTable("Comics");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.ComicsItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComicsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComicsId");

                    b.ToTable("ComicsItem");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Available")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId")
                        .IsUnique();

                    b.ToTable("Events");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.EventsItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventsId");

                    b.ToTable("EventsItem");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Available")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId")
                        .IsUnique();

                    b.ToTable("Series");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.SeriesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("SeriesItem");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Stories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Available")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId")
                        .IsUnique();

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.StoriesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoriesId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StoriesId");

                    b.ToTable("StoriesItem");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Thumbnail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId")
                        .IsUnique();

                    b.ToTable("Thumbnail");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Url", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId");

                    b.ToTable("Url");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.CharacterInformation", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.Character", "Character")
                        .WithMany("CharacterInformations")
                        .HasForeignKey("CharacterId")
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Comics", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithOne("Comics")
                        .HasForeignKey("MarvelAPI.Business.Models.Comics", "CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.ComicsItem", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.Comics", "Comics")
                        .WithMany("Items")
                        .HasForeignKey("ComicsId")
                        .IsRequired();

                    b.Navigation("Comics");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Events", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithOne("Events")
                        .HasForeignKey("MarvelAPI.Business.Models.Events", "CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.EventsItem", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.Events", "Events")
                        .WithMany("Items")
                        .HasForeignKey("EventsId")
                        .IsRequired();

                    b.Navigation("Events");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Series", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithOne("Series")
                        .HasForeignKey("MarvelAPI.Business.Models.Series", "CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.SeriesItem", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.Series", "Series")
                        .WithMany("Items")
                        .HasForeignKey("SeriesId")
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Stories", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithOne("Stories")
                        .HasForeignKey("MarvelAPI.Business.Models.Stories", "CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.StoriesItem", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.Stories", "Stories")
                        .WithMany("Items")
                        .HasForeignKey("StoriesId")
                        .IsRequired();

                    b.Navigation("Stories");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Thumbnail", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithOne("Thumbnail")
                        .HasForeignKey("MarvelAPI.Business.Models.Thumbnail", "CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Url", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithMany("Urls")
                        .HasForeignKey("CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Character", b =>
                {
                    b.Navigation("CharacterInformations");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.CharacterInformation", b =>
                {
                    b.Navigation("Comics");

                    b.Navigation("Events");

                    b.Navigation("Series");

                    b.Navigation("Stories");

                    b.Navigation("Thumbnail");

                    b.Navigation("Urls");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Comics", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Events", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Series", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Stories", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
