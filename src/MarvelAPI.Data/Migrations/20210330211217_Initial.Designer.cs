// <auto-generated />
using MarvelAPI.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarvelAPI.Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210330211217_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MarvelAPI.Business.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributionHTML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Copyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttributionHTML = "<a href=\"http://marvel.com\">Data provided by Marvel. © 2021 MARVEL</a>",
                            AttributionText = "Data provided by Marvel. © 2021 MARVEL",
                            Copyright = "© 2021 MARVEL",
                            Etag = "20cf4cd43cc9cd35833392e0964888958f576824"
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.CharacterInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarvelId")
                        .HasColumnType("int");

                    b.Property<string>("Modified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterInformation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Description = "Rick Jones has been Hulk's best bud since day one, but now he's more than a friend...he's a teammate! Transformed by a Gamma energy explosion, A-Bomb's thick, armored skin is just as strong and powerful as it is blue. And when he curls into action, he uses it like a giant bowling ball of destruction!",
                            MarvelId = 1017100,
                            Modified = "30/03/2021 17:12:16",
                            Name = "A-Bomb (HAS)",
                            ResourceURI = "http://gateway.marvel.com/v1/public/characters/1017100"
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Comics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Available")
                        .HasColumnType("int");

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId")
                        .IsUnique();

                    b.ToTable("Comics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = 3,
                            CharacterInformationId = 1,
                            CollectionURI = "http://gateway.marvel.com/v1/public/characters/1017100/comics"
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.ComicsItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComicsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComicsId");

                    b.ToTable("ComicsItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComicsId = 1,
                            Name = "Hulk (2008) #53",
                            ResourceURI = "http://gateway.marvel.com/v1/public/comics/40632"
                        },
                        new
                        {
                            Id = 2,
                            ComicsId = 1,
                            Name = "Hulk (2008) #54",
                            ResourceURI = "http://gateway.marvel.com/v1/public/comics/40630"
                        },
                        new
                        {
                            Id = 3,
                            ComicsId = 1,
                            Name = "Hulk (2008) #55",
                            ResourceURI = "http://gateway.marvel.com/v1/public/comics/40628"
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Available")
                        .HasColumnType("int");

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId")
                        .IsUnique();

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = 0,
                            CharacterInformationId = 1,
                            CollectionURI = "http://gateway.marvel.com/v1/public/characters/1017100/events"
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.EventsItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventsId");

                    b.ToTable("EventsItem");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Available")
                        .HasColumnType("int");

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId")
                        .IsUnique();

                    b.ToTable("Series");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = 2,
                            CharacterInformationId = 1,
                            CollectionURI = "http://gateway.marvel.com/v1/public/characters/1017100/series"
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.SeriesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("SeriesItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "FREE COMIC BOOK DAY 2013 1 (2013)",
                            ResourceURI = "http://gateway.marvel.com/v1/public/series/17765",
                            SeriesId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hulk (2008 - 2012)",
                            ResourceURI = "http://gateway.marvel.com/v1/public/series/3374",
                            SeriesId = 1
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Stories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Available")
                        .HasColumnType("int");

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId")
                        .IsUnique();

                    b.ToTable("Stories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = 2,
                            CharacterInformationId = 1,
                            CollectionURI = "http://gateway.marvel.com/v1/public/characters/1017100/stories"
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.StoriesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoriesId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StoriesId");

                    b.ToTable("StoriesItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hulk (2008) #55",
                            ResourceURI = "http://gateway.marvel.com/v1/public/stories/92078",
                            StoriesId = 1,
                            Type = "cover"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Interior #92079",
                            ResourceURI = "http://gateway.marvel.com/v1/public/stories/92079",
                            StoriesId = 1,
                            Type = "interiorStory"
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Thumbnail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId")
                        .IsUnique();

                    b.ToTable("Thumbnail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterInformationId = 1,
                            Extension = "jpg",
                            Path = "http://i.annihil.us/u/prod/marvel/i/mg/3/20/5232158de5b16"
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Url", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInformationId");

                    b.ToTable("Url");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterInformationId = 1,
                            Type = "detail",
                            Uri = "http://marvel.com/characters/76/a-bomb?utm_campaign=apiRef&utm_source=d56c9ed938d7d397eb1933d4070e8cda"
                        },
                        new
                        {
                            Id = 2,
                            CharacterInformationId = 1,
                            Type = "comiclink",
                            Uri = "http://marvel.com/comics/characters/1017100/a-bomb_has?utm_campaign=apiRef&utm_source=d56c9ed938d7d397eb1933d4070e8cda"
                        });
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.CharacterInformation", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.Character", "Character")
                        .WithMany("CharacterInformations")
                        .HasForeignKey("CharacterId")
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Comics", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithOne("Comics")
                        .HasForeignKey("MarvelAPI.Business.Models.Comics", "CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.ComicsItem", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.Comics", "Comics")
                        .WithMany("Items")
                        .HasForeignKey("ComicsId")
                        .IsRequired();

                    b.Navigation("Comics");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Events", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithOne("Events")
                        .HasForeignKey("MarvelAPI.Business.Models.Events", "CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.EventsItem", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.Events", "Events")
                        .WithMany("Items")
                        .HasForeignKey("EventsId")
                        .IsRequired();

                    b.Navigation("Events");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Series", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithOne("Series")
                        .HasForeignKey("MarvelAPI.Business.Models.Series", "CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.SeriesItem", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.Series", "Series")
                        .WithMany("Items")
                        .HasForeignKey("SeriesId")
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Stories", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithOne("Stories")
                        .HasForeignKey("MarvelAPI.Business.Models.Stories", "CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.StoriesItem", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.Stories", "Stories")
                        .WithMany("Items")
                        .HasForeignKey("StoriesId")
                        .IsRequired();

                    b.Navigation("Stories");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Thumbnail", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithOne("Thumbnail")
                        .HasForeignKey("MarvelAPI.Business.Models.Thumbnail", "CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Url", b =>
                {
                    b.HasOne("MarvelAPI.Business.Models.CharacterInformation", "CharacterInformation")
                        .WithMany("Urls")
                        .HasForeignKey("CharacterInformationId")
                        .IsRequired();

                    b.Navigation("CharacterInformation");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Character", b =>
                {
                    b.Navigation("CharacterInformations");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.CharacterInformation", b =>
                {
                    b.Navigation("Comics");

                    b.Navigation("Events");

                    b.Navigation("Series");

                    b.Navigation("Stories");

                    b.Navigation("Thumbnail");

                    b.Navigation("Urls");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Comics", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Events", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Series", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MarvelAPI.Business.Models.Stories", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
